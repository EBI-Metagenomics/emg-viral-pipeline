/*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Config to store module specific params.
     - publishDir
     - ext arguments
     - prefixes
     ( execution params are in nf_*.config )
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

process {
    withName: 'ANNOTATION' {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/annotation/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_annotation.tsv"
            ]
        ]
    }
    
    withName: 'ASSIGN' {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.taxdir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_taxonomy.tsv"
            ],
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/taxonomy/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_taxonomy.tsv"
            ],
        ]
    }
    
    withName: BALLOON {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/balloon/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.{pdf,svg}"
            ]
        ]
    }
    
    withName: BLAST {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.blastdir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.blast"
            ],
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/blast/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.filtered.blast"
            ],
        ]
    }
    
    withName: BLAST_FILTER {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.blastdir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.meta"
            ],
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/blast/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.meta"
            ],
        ]
    }
    
    withName: CHECKV {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.checkvdir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_quality_summary.tsv"
            ],
        ]
    }
    
    withName: GENERATE_CHROMOMAP_TABLE {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/chromomap/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.filtered-*.contigs.txt"
            ]
        ]
    }
    
    withName: GENERATE_KRONA_TABLE {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.plotdir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.krona.tsv"
            ],
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/krona/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.krona.tsv"
            ],
        ]
    }
    
    withName: GENERATE_SANKEY_TABLE {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.plotdir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.sankey.*"
            ],
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/sankey/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.sankey.filtered-${params.sankey}.json"
            ]
        ]
    }
    
    withName: CHROMOMAP {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/chromomap/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.html"
            ]
        ]
    }
    
    withName: HMM_POSTPROCESSING {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.hmmerdir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_modified.tsv"
            ]
        ]
    }
    
    withName: HMMSCAN {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.hmmerdir}/${params.databases}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_${params.databases}_hmmscan.tbl"
            ]
        ]
    }
    
    withName: KAIJU {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.out"
            ]
        ]
    }
    
    withName: KRONA {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.plotdir}/krona/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.krona.html"
            ],
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/krona/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.krona.html"
            ],
        ]
    }
    
    withName: LENGTH_FILTERING {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*filt*.fasta"
            ]
        ]
    }
    
    withName: MASHMAP {
        publishDir = [
            [
                path: "${params.output}/",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.tsv"
            ],
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/mashmap/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.tsv"
            ]
        ]
    }
    
    withName: MULTIQC {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.assemblydir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_multiqc_report.html"
            ]
        ]
    }
    
    withName: PARSE {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.fna"
            ],
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "virsorter_metadata.tsv"
            ],
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_virus_predictions.log"
            ]
        ]
    }
    
    withName: PHANOTATE {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.phanotatedir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.faa"
            ]
        ]
    }
    
    withName: PLOT_CONTIG_MAP {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.plotdir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_mapping_results"
            ],
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/annotation/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_prot_ann_table_filtered.tsv"
            ]
        ]
    }
   
    withName: PPRMETA {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.virusdir}/pprmeta/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_pprmeta.csv"
            ]
        ]
    }
    
    withName: PRODIGAL {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.prodigaldir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.faa"
            ],
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/cds/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.faa"
            ]
        ]
    } 
    
    withName: RATIO_EVALUE {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/ratio_evalue_tables/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_modified_informative.tsv"
            ]
        ]
    }
    
    withName: RENAME {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_renamed.fasta"
            ]
        ]
    }
    
    withName: RESTORE {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_original.fasta"
            ],
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/contigs/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_original.fasta"
            ]
        ]
    }
    
    withName: SANKEY {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.plotdir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.sankey.html"
            ],
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/sankey/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.sankey.html"
            ]
        ]
    }
    
    withName: SPADES {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.assemblydir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.fasta"
            ]
        ]
    }
    
    withName: VIRFINDER {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.virusdir}/virfinder/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.txt"
            ]
        ]
    }
    
    withName: VIRSORTER {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.virusdir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false
            ]
        ]
    }
    
    withName: VIRSORTER2 {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.virusdir}/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "virsorter2/*.{tsv,fasta}"
            ]
        ]
    }
    
    withName: WRITE_GFF {
        publishDir = [
            [
                path: "${params.output}",
                saveAs: {
                    filename -> {
                        if ( filename.equals('versions.yml') ) {
                            return null;
                        }
                        def output_file = new File(filename);
                        return "${meta.id}/${params.finaldir}/gff/${output_file.name}";
                    }
                },
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.gff"
            ]
        ]
    }
}