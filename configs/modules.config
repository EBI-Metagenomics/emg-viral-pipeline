/*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Config to store module specific params.
     - publishDir
     - ext arguments
     - prefixes
     ( execution params are in nf_*.config )
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

process {
    withName: ANNOTATION {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.finaldir}/annotation/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_annotation.tsv"
            ]
        ]
    }
    
    withName: ASSIGN {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.taxdir}",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_taxonomy.tsv"
            ],
            [
                path: "${params.output}/${name}/${params.finaldir}/taxonomy",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_taxonomy.tsv"
            ],
        ]
    }
    
    withName: BALLOON {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.finaldir}/balloon/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.{pdf,svg}"
            ]
        ]
    }
    
    withName: BLAST {
        errorStrategy 'retry'
        maxRetries 1
        publishDir = [
            [
                path: "${params.output}/${assembly_name}/${params.blastdir}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.blast"
            ],
            [
                path: "${params.output}/${assembly_name}/${params.finaldir}/blast/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.filtered.blast"
            ],
        ]
    }
    
    withName: BLAST_FILTER {
        errorStrategy 'retry'
        maxRetries 1
        publishDir = [
            [
                path: "${params.output}/${assembly_name}/${params.blastdir}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.meta"
            ],
            [
                path: "${params.output}/${assembly_name}/${params.finaldir}/blast/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.meta"
            ],
        ]
    }
    
    withName: CHECKV {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.checkvdir}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${confidence_set_name}"
            ],
            [
                path: "${params.output}/${name}/${params.checkvdir}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.tsv"
            ],
        ]
    }
    
    withName: GENERATE_CHROMOMAP_TABLE {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.finaldir}/chromomap/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${id}.filtered-*.contigs.txt"
            ]
        ]
    }
    
    withName: GENERATE_KRONA_TABLE {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.plotdir}",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.krona.tsv"
            ],
            [
                path: "${params.output}/${name}/${params.finaldir}/krona/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.krona.tsv"
            ],
        ]
    }
    
    withName: GENERATE_SANKEY_TABLE {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.plotdir}",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${set_name}.sankey.*"
            ],
            [
                path: "${params.output}/${name}/${params.finaldir}/sankey/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${set_name}.sankey.filtered-${params.sankey}.json"
            ]
        ]
    }
    
    withName: CHROMOMAP {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.finaldir}/chromomap/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.html"
            ]
        ]
    }
    
    withName: FILTER_READS {
        publishDir = [
            [
                path: "${params.output}/${name}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${name}.filtered.fastq"
            ]
        ]
    }
    
    withName: HMM_POSTPROCESSING {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.hmmerdir}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${set_name}_modified.tsv"
            ]
        ]
    }
    
    withName: HMMSCAN {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.hmmerdir}/${params.db}",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${set_name}_${params.db}_hmmscan.tbl"
            ]
        ]
    }
    
    withName: KAIJU {
        publishDir = [
            [
                path: "${params.output}/${name}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${name}.out"
            ]
        ]
    }
    
    withName: KRONA {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.plotdir}/krona/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.krona.html"
            ],
            [
                path: "${params.output}/${name}/${params.finaldir}/krona/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.krona.html"
            ],
        ]
    }
    
    withName: LENGTH_FILTERING {
        publishDir = [
            [
                path: "${params.output}/${name}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${name}*filt*.fasta"
            ]
        ]
    }
    
    withName: MASHMAP {
        publishDir = [
            [
                path: "${params.output}/${assembly_name}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.tsv"
            ],
            [
                path: "${params.output}/${assembly_name}/${params.finaldir}/mashmap",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.tsv"
            ]
        ]
    }
    
    withName: MULTIQC {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.assemblydir}",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${name}_multiqc_report.html"
            ]
        ]
    }
    
    withName: PARSE {
        publishDir = [
            [
                path: "${params.output}/${name}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.fna"
            ],
            [
                path: "${params.output}/${name}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "virsorter_metadata.tsv"
            ],
            [
                path: "${params.output}/${name}/${params.finaldir}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${name}_virus_predictions.log"
            ]
        ]
    }
    
    withName: PHANOTATE {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.phanotatedir}",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.faa"
            ]
        ]
    }
    
    withName: PLOT_CONTIG_MAP {
        errorStrategy { 
            task.exitStatus = 1 ? 'ignore' :  'terminate'     
        }
        publishDir = [
            [
                path: "${params.output}/${name}/${params.plotdir}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${set_name}_mapping_results"
            ],
            [
                path: "${params.output}/${name}/${params.finaldir}/annotation/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${set_name}_prot_ann_table_filtered.tsv"
            ]
        ]
    }
   
    withName: PPRMETA {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.virusdir}/pprmeta",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${name}_pprmeta.csv"
            ]
        ]
    }
    
    withName: PRODIGAL {
        errorStrategy { 
            task.exitStatus = 18 ? 'ignore' :  'terminate' 
        }
        publishDir = [
            [
                path: "${params.output}/${assembly_name}/${params.prodigaldir}",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.faa"
            ],
            [
                path: "${params.output}/${assembly_name}/${params.finaldir}/cds/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.faa"
            ]
        ]
    } 
    
    withName: RATIO_EVALUE {
        errorStrategy { 
            task.exitStatus = 1 ? 'ignore' :  'terminate' 
        }
        publishDir = [
            [
                path: "${params.output}/${name}/ratio_evalue_tables",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${set_name}_modified_informative.tsv"
            ]
        ]
    }
    
    withName: RENAME {
        publishDir = [
            [
                path: "${params.output}/${name}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${name}_renamed.fasta"
            ]
        ]
    }
    
    withName: RESTORE {
        publishDir = [
            [
                path: "${params.output}/${name}/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_original.fasta"
            ],
            [
                path: "${params.output}/${name}/${params.finaldir}/contigs/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*_original.fasta"
            ]
        ]
    }
    
    withName: SANKEY {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.plotdir}",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.sankey.html"
            ],
            [
                path: "${params.output}/${name}/${params.finaldir}/sankey/",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.sankey.html"
            ]
        ]
    }
    
    withName: SPADES {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.assemblydir}",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${name}.fasta"
            ]
        ]
    }
    
    withName: VIRFINDER {
        errorStrategy { 
            task.exitStatus = 1 ? 'ignore' :  'terminate' 
        }
        publishDir = [
            [
                path: "${params.output}/${name}/${params.virusdir}/virfinder",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "${name}.txt"
            ]
        ]
    }
    
    withName: VIRSORTER {
        publishDir = [
            [
                path: "${params.output}/${name}/${params.virusdir}/",
                mode: params.publish_dir_mode,
                failOnError: false
            ]
        ]
    }
    
    withName: WRITE_GFF {
        errorStrategy 'ignore'
        publishDir = [
            [
                path: "${params.output}/${name}/${params.finaldir}/gff",
                mode: params.publish_dir_mode,
                failOnError: false,
                pattern: "*.gff"
            ]
        ]
    }
}