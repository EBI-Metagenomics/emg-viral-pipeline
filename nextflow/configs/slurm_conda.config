
workDir = params.workdir

executor {
    name = "slurm"
    queueSize = 1000
}

process {
    cache = "lenient"
    //errorStrategy = "retry"
    //maxRetries = 1
            withLabel: basics { cpus = 1; memory = '4 GB'; conda = 'envs/python3.yaml' }
            withLabel: blast { cpus = params.cores; memory = '4 GB'; conda = 'envs/blast.yaml' }
            withLabel: fastp { cpus = params.cores; memory = '16 GB' ; conda = 'envs/fastp.yaml' } 
            withLabel: fastqc { cpus = params.cores; memory = '8 GB' ; conda = 'envs/fastqc.yaml' } 
            withLabel: multiqc { cpus = params.cores; memory = '4 GB' ; conda = 'envs/multiqc.yaml' } 
            withLabel: spades { cpus = params.cores; memory = '42 GB' ; conda = 'envs/spades.yaml' } 
            withLabel: kaiju { cpus = params.cores; memory = '42 GB' ; conda = 'envs/kaiju.yaml' }
            withLabel: krona { cpus = params.cores; memory = '4 GB' ; conda = 'envs/krona.yaml'  }
            withLabel: filter { cpus = 1; memory = '4 GB'; conda = 'envs/python2.yaml' }
	        withLabel: virsorter { cpus = params.cores; memory = '8 GB' ; conda = 'envs/virsorter.yaml' }
            withLabel: virfinder { cpus = 1; memory = '8 GB' ; conda = 'envs/virfinder.yaml' }
            withLabel: parse { cpus = 1; memory = '4 GB'; conda = 'envs/python3.yaml' }
            withLabel: prodigal { cpus = params.cores; memory = '8 GB'; conda = 'envs/prodigal.yaml' }
            withLabel: phanotate { cpus = 1; memory = '4.0 GB'; conda = 'envs/phanotate.yaml' }
            withLabel: hmmscan { cpus = params.cores; memory = '16 GB'; conda = 'envs/hmmer.yaml' }
            withLabel: ratio_evalue { cpus = 1; memory = '4 GB'; conda = 'envs/python3.yaml' }
            withLabel: ruby { cpus = 1; memory = '4.0 GB'; conda = 'envs/ruby.yaml' } 
            withLabel: annotation { cpus = 1; memory = '4 GB'; conda = 'envs/python3.yaml' }
            withLabel: mapping { cpus = 1; memory = '4 GB'; conda = 'envs/r.yaml' }
            withLabel: assign { cpus = 1; memory = '4 GB'; conda = 'envs/python3.yaml' }

}

