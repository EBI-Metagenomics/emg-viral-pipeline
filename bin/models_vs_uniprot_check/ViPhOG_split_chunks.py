#!/usr/bin/env python3

import os
import re
import glob
import sys
import operator
import ast

###############################################################################################
# This script was written as part of the analysis conducted on the output generated by        #
# hmmsearch, when the ViPhOG database was searched against UniProtKB. The ViPhOG profile HMM  #
# files were stored in different directories, each containing maximum 2000 files and named    #
# using a sequential number from 1 to 16 (hmm1...hmm16). For each one of these a corresponding#
# output directory was generated, each containing a domtbl output file for each of the files  #
# stored in the hmm directories. The output directories were named using the same sequential  #
# numbers as the directories storing the hmm files (hmm1domtbl...hmm16domtbl).                #
###############################################################################################

print('First step: Sort ViPhOGs into chunks based on the number of different hits against UniProtKB\n')
print('Looking for domtbl output files...')
if len([item for item in glob.glob('hmm*domtbl') if os.path.isdir(item)]) < 1:
	print('No domtbl output directories found.\nMake sure to run the script from within the directory containing the domtbl output directories (check comment block for guidance)', file = sys.stderr)
else:
	print('Creating file generator...')
	hmmer_result_files = (item for item in glob.glob("hmm*domtbl/*"))
	print('Done!')
	# Here ViPhOGs are sorted based on the number of hits to different proteins in UniProt
	print('Identifying the number of different hits reported for each ViPhOG...')
	viphog_unique = []
	for elem in hmmer_result_files:
		targets = set()
		with open(elem) as input_file:
			for line in input_file:
				if not re.search(r"^#", line) and float(line.split()[6]) <= 1e-3:
					targets.add(line.split()[0].split("|")[1])
	
		if len(targets) > 0:
			viphog_unique.append((os.path.basename(elem).split("_")[0], len(targets)))
	viphog_unique_sorted = sorted(viphog_unique, key = operator.itemgetter(1))
	print('Done!')
	
	def chunks(l, n):
		chunk_size = int(len(l)/n)
		if len(l)%n == 0:
			for i in range(0, len(l), chunk_size):
				yield l[i:i + chunk_size]
		else:
			for i in range(0, len(l), chunk_size):
				if len(l[i+chunk_size:]) >= chunk_size:
					yield l[i:i + chunk_size]
				else:
					yield l[i:]
					break
	print('Sorting ViPhOGs into chunks and generating corresponding files...')				
	viphog_gen = chunks(viphog_unique_sorted, 10)
	
	if not os.path.exists('unique_hits_chunks'):
		os.mkdir('unique_hits_chunks')
		
	for i,j in enumerate(viphog_gen):
		with open("unique_hits_chunks/chunk_%s.tsv" % (i + 1), "w") as output_file:
			output_file.write("profile\tunique_hits\n")
			for x,y in j:
				output_file.write("%s\t%s\n" % (x, y))
	print('Done!')