manifest {
    mainScript      = 'main.nf'
    nextflowVersion = '>=24.04.0'
    homePage        = 'https://github.com/EBI-Metagenomics/emg-viral-pipeline'
    description     = """VIRify is a pipeline for the detection, annotation, and taxonomic classification of viral contigs in metagenomic and metatranscriptomic assemblies."""
    defaultBranch   = 'main'
    version         = '3.0.2'
}

params {
    cores                       = 8
    max_cores                   = 12
    memory                      = "12.GB"

    help                        = false

    // inputs
    assemble                    = ''
    fasta                       = ''
    samplesheet                 = ''

    // databases
    virsorter                   = false
    virsorter2                  = false
    virfinder                   = false
    viphog                      = false
    ncbi                        = false
    checkv                      = false
    rvdb                        = false
    pvogs                       = false
    vogdb                       = false
    vpf                         = false
    imgvr                       = false
    pprmeta                     = false
    meta                        = false

    virome                      = false
    hmmextend                   = false
    blastextend                 = false
    chromomap                   = false
    balloon                     = false
    onlyannotate                = false
    use_virsorter_v1            = false
    use_proteins                = false
    publish_all                 = false
    mashmap_len                 = 2000
    mashmap                     = ''
    evalue                      = 0.01
    prop                        = 0.1
    taxthres                    = 0.6
    factor                      = "${projectDir}/references/viphogs_cds_per_taxon_cummulative.csv"

    sankey                      = 25
    chunk                       = 10
    length                      = 1.5
    // in kb, so 0.5 filters all contigs shorter 500 nt
    proteins_chunksize          = 10000000
    hmmer_tool                  = "hmmsearch"

    // development
    viphog_version              = 'v3'
    meta_version                = 'v4'

    // folder structure
    output                      = 'results'
    assemblydir                 = '00-assembly'
    virusdir                    = '01-predictions'
    prodigaldir                 = '02-prodigal'
    hmmerdir                    = '03-hmmer'
    blastdir                    = '04-blast'
    plotdir                     = '05-plots'
    taxdir                      = '06-taxonomy'
    checkvdir                   = '07-checkv'
    finaldir                    = '08-final'

    // location for autodownload data like databases
    databases                   = 'nextflow-autodownload-databases'

    // optional profile configurations, mostly necessary for HPC execution [lsf, slurm]
    workdir                     = 'work'
    singularity_cachedir        = 'singularity'

    // Boilerplate options
    trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss' ) // Config options
    publish_dir_mode            = 'copy'

    // MultiQC options
    multiqc_config              = ''
    multiqc_title               = ''
    multiqc_logo                = ''
    multiqc_methods_description = ''
}

includeConfig 'configs/base.config'
includeConfig 'configs/modules.config'

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry = 'quay.io'
docker.registry = 'quay.io'
podman.registry = 'quay.io'
singularity.registry = 'quay.io'

profiles {

    //executors
    local {
        executor {
            name = "local"
        }
        workDir             = params.workdir
        params.cloudProcess = false
        includeConfig 'configs/local.config'
    }

    lsf {
        workDir             = params.workdir
        executor {
            name      = "lsf"
            queueSize = 200
        }
        params.cloudProcess = true
        process.cache       = "lenient"
        conda.enabled       = false
    }

    slurm {
        workDir             = params.workdir
        executor {
            name      = "slurm"
            queueSize = 200
        }
        params.cloudProcess = true
        process.cache       = "lenient"
        conda.enabled       = false
    }


    //engines
    docker {
        docker {
            enabled = true
        }
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }

    singularity {
        singularity {
            enabled    = true
            autoMounts = true
            cacheDir   = params.singularity_cachedir
        }
    }

    conda {
        // not working right now due to missing conda package for PPR-Meta! 
        includeConfig 'configs/conda.config'
        conda.enabled = true
    }


    // pre-merged profiles for direct usage
    standard {
        executor {
            name = "local"
        }
        workDir             = params.workdir
        params.cloudProcess = false
        includeConfig 'configs/local.config'
        docker {
            enabled = true
        }
    }
}

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.output}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.output}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.output}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.output}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}
