manifest {
    mainScript = 'virify.nf'
    nextflowVersion = '>=20.00.0'
}

params {
    max_cores            = Runtime.runtime.availableProcessors()
    cores                = Runtime.runtime.availableProcessors().intdiv(4)
    memory               = 12.GB
    help                 = false

    // inputs
    assemble             = ''
    fasta                = ''
    samplesheet          = ''

    // databases
    virsorter            = false
    virsorter2           = false
    virfinder            = false
    viphog               = false
    ncbi                 = false
    checkv               = false
    rvdb                 = false
    pvogs                = false
    vogdb                = false
    vpf                  = false
    imgvr                = false
    pprmeta              = false
    meta                 = false

    virome               = false
    hmmextend            = false
    blastextend          = false
    chromomap            = false
    balloon              = false
    onlyannotate         = false
    use_virsorter_v1     = false
    use_proteins         = false
    publish_all          = false
    mashmap_len          = 2000
    mashmap              = ''
    evalue               = 0.01
    prop                 = 0.1
    taxthres             = 0.6
    factor               = "$projectDir/references/viphogs_cds_per_taxon_cummulative.csv"

    sankey               = 25
    chunk                = 10
    length               = 1.5 // in kb, so 0.5 filters all contigs shorter 500 nt

    // development
    viphog_version       = 'v3'
    meta_version         = 'v4'

    // folder structure
    output               = 'results'
    assemblydir          = '00-assembly'
    virusdir             = '01-viruses'
    prodigaldir          = '02-prodigal'
    hmmerdir             = '03-hmmer'
    blastdir             = '04-blast'
    plotdir              = '05-plots'
    taxdir               = '06-taxonomy'
    checkvdir            = '07-checkv'
    finaldir             = '08-final'

    // location for autodownload data like databases
    databases            = 'nextflow-autodownload-databases'

    // optional profile configurations, mostly necessary for HPC execution [lsf, slurm]
    workdir              = 'work'
    singularity_cachedir = 'singularity'
    
    publish_dir_mode     = 'copy'
    
    // MultiQC options
    multiqc_config              = ''
    multiqc_title               = ''
    multiqc_logo                = ''
    multiqc_methods_description = ''
}

includeConfig 'configs/base.config'
includeConfig 'configs/modules.config'

// EBI CODON cluster
includeConfig 'configs/ebi.config'

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

profiles {

    //executors
    local {
        executor {
                name = "local"
               	cpus = params.max_cores
        } 
        workDir = params.workdir
        params.cloudProcess = false
        includeConfig 'configs/local.config'
    }

    lsf {
        workDir = params.workdir
        executor {
            name = "lsf"
            queueSize = 200
        }        
        params.cloudProcess = true
        process.cache = "lenient"
        conda.enabled = false
    }

    slurm {
        workDir = params.workdir
        executor {
            name = "slurm"
            queueSize = 200
        }        
        params.cloudProcess = true
        process.cache = "lenient"
        conda.enabled = false
    }

    
    //engines
    docker { 
        docker { enabled = true }
        docker.runOptions      = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }

    singularity {
        singularity { 
                enabled = true
                autoMounts = true
                cacheDir = params.singularity_cachedir
        }
    }

    conda { 
        // not working right now due to missing conda package for PPR-Meta! 
        includeConfig 'configs/conda.config'
        conda.enabled = true
    }


    //pre-merged profiles for direct usage
    standard { 
        executor {
                name = "local"
               	cpus = params.max_cores
        }
        workDir = params.workdir
        params.cloudProcess = false
        includeConfig 'configs/local.config'
        docker { enabled = true }
    }

    // CONFIGURE YOUR PRIVATE CLOUD
    gcloud {
        workDir = params.workdir
        params.databases = 'gs://databases-matrice/virify/'
        bucketDir = 'gs://matrice/virify-work'

        process.executor = 'google-lifesciences'
 
        google {
            project = 'nextflow-auto-255816'
            zone = 'europe-west1-b'
            lifeSciences.preemptible = false
            lifeSciences.bootDiskSize = 20.GB
        }

        params.cloudProcess = true

        docker { enabled = true }
    }
} 